#!/bin/bash
#/ Usage: strap
#/ Install development dependencies on macOS.
set -e

# Keep sudo timestamp updated while Strap is running.
if [ "$1" = "--sudo-wait" ]; then
  while true; do
    sudo -v
    sleep 5
  done
  exit 0
fi

STRAP_SUCCESS=""
STRAP_FULL_PATH="$(cd "$(dirname "$0")" && pwd)/$(basename "$0")"

cleanup() {
  set +e
  if [ -n "$STRAP_SUDO_WAIT_PID" ]; then
    sudo kill "$STRAP_SUDO_WAIT_PID"
  fi
  sudo -k
  rm -f "$CLT_PLACEHOLDER"
  if [ -z "$STRAP_SUCCESS" ]; then
    if [ -n "$STRAP_STEP" ]; then
      echo "!!! $STRAP_STEP FAILED" >&2
    else
      echo "!!! FAILED" >&2
    fi
    if [ -z "$STRAP_DEBUG" ]; then
      echo "!!! Run '$0 --debug' for debugging output." >&2
    fi
  fi
}

trap "cleanup" EXIT

log()  { STRAP_STEP="$*"; echo "--> $*"; }
logn() { STRAP_STEP="$*"; printf -- "--> %s " "$*"; }
logk() { STRAP_STEP="";   echo "OK"; }

# Initialise sudo now to save prompting later.
log "Enter your password (for sudo access):"
sudo -kv
[ -f "$STRAP_FULL_PATH" ]
sudo bash "$STRAP_FULL_PATH" --sudo-wait &
STRAP_SUDO_WAIT_PID="$!"
ps -p "$STRAP_SUDO_WAIT_PID" &>/dev/null
logk

# Install the Xcode Command Line Tools.
if ! [ -f "/Library/Developer/CommandLineTools/usr/bin/git" ] || \
   ! [ -f "/usr/include/iconv.h" ]
then
  log "Installing the Xcode Command Line Tools:"
  CLT_PLACEHOLDER="/tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress"
  sudo touch "$CLT_PLACEHOLDER"
  CLT_PACKAGE=$(softwareupdate -l | \
                grep -B 1 -E "Command Line (Developer|Tools)" | \
                awk -F"*" '/^ +\*/ {print $2}' | sed 's/^ *//' | tail -n1)
  sudo softwareupdate -i "$CLT_PACKAGE"
  sudo rm -f "$CLT_PLACEHOLDER"
  if ! [ -f "/usr/include/iconv.h" ]; then
    echo
    logn "Requesting user install of Xcode Command Line Tools:"
    xcode-select --install
  fi
  logk
fi

# Check if the Xcode license is agreed to and agree if not.
xcode_license() {
  if /usr/bin/xcrun clang 2>&1 | grep -q license; then
    logn "Asking for Xcode license confirmation:"
    sudo xcodebuild -license
    logk
  fi
}
xcode_license

# Install Ansible.
if [ -z "$(command -v ansible)" ]; then
  log "Installing Ansible:"
  sudo easy_install pip
  pip install --upgrade setuptools --user python
  sudo pip install ansible --quiet
  logk
fi

# Install roles from Ansible Galaxy
log "Installing Ansible Galaxy roles:"
ansible-galaxy install -p "ansible/roles" -r "requirements.yml"
logk

STRAP_SUCCESS="1"
